//问题描述
//　　有n（2≤n≤20）块芯片，有好有坏，已知好芯片比坏芯片多。
//　　每个芯片都能用来测试其他芯片。用好芯片测试其他芯片时，能正确给出被测试芯片是好还是坏。而用坏芯片测试其他芯片时，会随机给出好或是坏的测试结果（即此结果与被测试芯片实际的好坏无关）。
//　　给出所有芯片的测试结果，问哪些芯片是好芯片。
//输入格式
//　　输入数据第一行为一个整数n，表示芯片个数。
//　　第二行到第n+1行为n*n的一张表，每行n个数据。表中的每个数据为0或1，在这n行中的第i行第j列（1≤i, j≤n）的数据表示用第i块芯片测试第j块芯片时得到的测试结果，1表示好，0表示坏，i=j时一律为1（并不表示该芯片对本身的测试结果。芯片不能对本身进行测试）。
//输出格式
//　　按从小到大的顺序输出所有好芯片的编号
//样例输入
//3
//1 0 1
//0 1 0
//1 0 1
//样例输出
//1 3


import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(new BufferedInputStream(System.in));
		PrintWriter out=new PrintWriter(new BufferedOutputStream(System.out));
		
		while(sc.hasNext())
		{
			int n=sc.nextInt();
			if(n==2)
			{
				out.print("1 2");//n==2，直接输出，提高效率
			}
			else
			{
				int[][] arr=new int[n][n];//储存矩阵
				int[] tag=new int[n];//用于做标记
				Arrays.fill(tag, 0);//置零
				for(int i=0;i<n;i++)
				{
					for(int j=0;j<n;j++)
					{
						arr[i][j]=sc.nextInt();
					}
				}//输入
				
				int flag=0;//控制空格输出
				for(int i=0;i<n;i++)//按列处理
				{
					for(int j=0;j<n;j++)
					{
						tag[i]+=arr[j][i];//统计1的个数
					}
					tag[i]--;//减去i==j时一律为1的情况
					if(tag[i]>=(n-1)/2)//除去被测试的芯片后，有一半以上或者一半认为该芯片为真，则芯片为真
					{
						if(flag==1)
						{
							out.print(" "+(i+1));
						}
						else if(flag==0)
						{
							out.print(i+1);
							flag=1;
						}
					}
				}
				
				
			}
			out.flush();
		}
		
		
		
		
		
		
		
		
		
	}
}