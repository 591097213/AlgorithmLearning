//问题描述
//　　给定一个N阶矩阵A，输出A的M次幂（M是非负整数）
//　　例如：
//　　A =
//　　1 2
//　　3 4
//　　A的2次幂
//　　7 10
//　　15 22
//输入格式
//　　第一行是一个正整数N、M（1<=N<=30, 0<=M<=5），表示矩阵A的阶数和要求的幂数
//　　接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值
//输出格式
//　　输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开
//样例输入
//2 2
//1 2
//3 4
//样例输出
//7 10
//15 22

//用递归处理程序更加清晰易懂
/****************************
 * 
 * 矩阵的零次幂为单位矩阵，即对角线为1，其余为0
 * 
 *****************************/
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.util.Scanner;

public class Main
{
	
	public static int[][] cheng(int[][] a,int n,int m)
	{
		if(m==0)
		{
			int[][] b=new int[n][n];
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<n;j++)
				{
					b[i][j]=0;
				}
			}
			for(int i=0;i<n;i++)
			{
				b[i][i]=1;
			}
			
			return b;
		}
		
		else if(m==1)
		{
			return a;
		}
		
		else
		{
			int[][] b=cheng(a,n,m-1);
			int[][] c=new int[n][n];
			
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<n;j++)
				{
					c[i][j]=0;
				}
			}
			
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<n;j++)
				{
					for(int k=0;k<n;k++)
					{
						c[i][j]+=b[i][k]*a[k][j];
					}
				}
			}
			
			return c;
		}
	}
	
	
	
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(new BufferedInputStream(System.in));
		PrintWriter out=new PrintWriter(new BufferedOutputStream(System.out));
		int n=sc.nextInt(),m=sc.nextInt();
		int arr[][]=new int[n][n];
		
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				arr[i][j]=sc.nextInt();
			}
		}
		
		int[][] a;
		a=cheng(arr,n,m);
		
		for(int i=0;i<n;i++)
		{
			out.print(a[i][0]);
			for(int j=1;j<n;j++)
			{
				out.print(" "+a[i][j]);
			}
			out.println();
		}
		out.flush();
		
		
		
		
	}
	
	
	
}